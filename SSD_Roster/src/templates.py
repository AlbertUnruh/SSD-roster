from __future__ import annotations


__all__ = ("templates",)


# standard library
from pathlib import Path

# fastapi
from fastapi.templating import Jinja2Templates
from jinja2.environment import Environment
from jinja2.loaders import FileSystemLoader

# local
from .messages import get_flashed_messages


# public instance of Jinja2Templates
templates = Jinja2Templates(
    env=Environment(  # basically the default environment generated by starlette
        loader=FileSystemLoader(["templates", "static"]),
        autoescape=True,
        # enable_async=True,  # will raise "RuntimeError: this event loop is already running." when templates are used
    )
)

ssd_roster_init = Path(__file__).parents[1].joinpath("__init__.py").read_text()
exec(ssd_roster_init, templates.env.globals)  # noqa S102
templates.env.globals.pop("__builtins__")
# ToDo: maybe append REV/HEAD (or whatever the hash-id is called) to templates.env.globals["__version__"]

templates.env.globals["get_flashed_messages"] = get_flashed_messages
